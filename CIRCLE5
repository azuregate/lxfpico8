pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
x = 64
y = 64
coin_visible = true

function _update()
  local next_x = x
  local next_y = y

  if btn(0) and x > 7 then next_x = x - 1 end
  if btn(1) and x < 122 then next_x = x + 1 end
  if btn(2) and y > 7 then next_y = y - 1 end
  if btn(3) and y < 122 then next_y = y + 1 end

  if not check_collision(next_x, next_y) then
    x = next_x
    y = next_y
  end
end

function _draw()
  cls(5)
  spr(1,x, y)
  _drawblocks()
end

function _drawblocks()
  rectfill(80, 80, 100, 100, 12)
  if coin_visible then
    spr(2, 120, 120)
  end
end

function check_collision(cx, cy)
  local rect_x1 = 80
  local rect_y1 = 80
  local rect_x2 = 100
  local rect_y2 = 100
  local r = 7

  local closest_x = mid(rect_x1, cx, rect_x2)
  local closest_y = mid(rect_y1, cy, rect_y2)

  local distance = sqrt((cx - closest_x)^2 + (cy - closest_y)^2)

  -- check collision with rectangle
  if distance < r then
    return true
  end

  -- check collision with coin
  if coin_visible then
    local s2_x = 120
    local s2_y = 120
    local s2_size = 8  -- assuming 8x8 sprite size

    if cx + r > s2_x and cx - r < s2_x + s2_size and
       cy + r > s2_y and cy - r < s2_y + s2_size then
      coin_visible = false
    end
  end

  return false
end

__gfx__
0000000000c00c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008008000009900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000800800009af90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000008800009a99f9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000008800009f99a9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000800800009af90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000080000800009900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000c0000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
